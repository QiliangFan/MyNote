// ////////////////////////////////////////////////////////
// 
// J_InnerTest.java
// 
// 开发者: 雍俊海
// ////////////////////////////////////////////////////////
// 简介:
//     实名内部类例程。
// ////////////////////////////////////////////////////////
// Copyright:
//
// Using this example, please explicitly refer to the book:
//     Jun-Hai Yong. Textbook for Programming in Java. 
//     Beijing: Tsinghua University Press, 2007.
// The example should be used legally, beneficially and
// without any harm to anybody. Please note that the
// author and the publisher make no warranty of any kind
// on the examples provided.
// Citation examples:
// The program is an example in (or based on, or modified from)
//     Jun-Hai Yong. Textbook for Programming in Java. 
//     Beijing: Tsinghua University Press, 2007.
//
// Some other books by Jun-Hai Yong are:
//      [1] Jun-Hai Yong. Programming in Java. 
//          Beijing: Tsinghua University Press, 2004.
//      [2] Jun-Hai Yong. Exercises for Programming in Java.
//          Beijing: Tsinghua University Press, 2006.
//
// 版权:
// 使用本例子，请注明引用:
//     雍俊海. Java 程序设计教程. 北京: 清华大学出版社, 2007.
// 请合法使用例程，其用途应当合法有益而且不应对任何人造成任何
// 伤害或损失。同时请注意教材作者及出版社没有对例程做出任何承
// 诺与保证。
// 具体引用的方法及例子如下:
// 本程序是下面教材的一个例程(或本程序基于下面教材的例程修改)
//     雍俊海. Java 程序设计教程. 北京: 清华大学出版社, 2007.
//
// 雍俊海还编写过如下的教材和教参:
//      [1] 雍俊海. Java 程序设计. 北京: 清华大学出版社, 2004.
//      [2] 雍俊海. Java程序设计习题集(含参考答案). 
//          北京: 清华大学出版社, 2006.
//
// ////////////////////////////////////////////////////////

class J_Test
{
    int m_dataOuter = 1;
    static int m_dataOuterStatic  = 2;

    class J_Inner
    {
        int m_data;
        static final int m_dataStatic = 4;
    
        public J_Inner( )
        {
            m_data = 3;
        } // J_Inner构造方法结束
    
        public void mb_method( )
        {
            System.out.println( "m_dataOuter=" + m_dataOuter );
            System.out.println( "m_dataOuterStatic="
                + m_dataOuterStatic );
            System.out.println( "m_data=" + m_data );
            System.out.println( "m_dataStatic=" + m_dataStatic );
            mb_methodOuter( );
        } // 方法mb_method结束
    } // 内部类J_Inner结束

    public void mb_methodOuter( )
    {
        System.out.println( "mb_methodOuter" );
    } // 方法mb_methodOuter结束

} // 类J_Test结束

public class J_InnerTest
{
    public static void main(String args[ ])
    {
        J_Test a = new J_Test( );
        J_Test.J_Inner b = a.new J_Inner( );
        b.mb_method( );
    } // 方法main结束
} // 类J_InnerTest结束
