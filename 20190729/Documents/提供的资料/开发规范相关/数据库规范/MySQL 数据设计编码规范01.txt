MySQL 数据库设计编码规范 
1.命名规范
    (1)库名、表名、字段名必须使用小写字母,并采用下划线分割. 
    (2)库名、表名、字段名禁止超过32个字符. 
    (3)库名、表名、字段名必须见名知意. 命名与业务、产品线等相关联. 
    (4)库名、表名、字段名禁止使用MySQL保留字. （保留字列表见mysql官方网站）
    (5)临时库、表名必须以tmp为前缀,并以日期为后缀. 例如 tmp_test01_20130704. 
    (6)备份库、表必须以bak为前缀,并以日期为后缀. 例如 bak_test01_20130704. 

2.基础规范
    (1)使用INNODB存储引擎. 
    (2)表字符集使用使用UTF8MB4字符集. 
    (3)所有表都需要添加注释;除主键外的其他字段都需要增加注释. 推荐采用英文标点,避免出现乱码. 
    (4)禁止在数据库中存储图片、文件等大数据. 
    (5)每张表数据量建议控制在5000W以内. 
    (6)禁止在线上做数据库压力测试. 
    (7)禁止从测试、开发环境直连数据库. 

3.库表设计
    (1)禁止使用分区表. 
    (2)将大字段、访问频率低的字段拆分到单独的表中存储,分离冷热数据. 
    (3)推荐使用HASH进行分表, 表名后缀使用十进制数,数字必须从0开始. 
    (4)按日期时间分表需符合YYYY[MM][DD][HH]格式,例如2018010101. 年份必须用4位数字表示.
        例如按日分表user_20180209、 按月散表user_201802. 
    (5)采用合适的分库分表策略. 例如千库十表、十库百表等. 

4.字段设计
    (1)建议使用UNSIGNED存储非负数值. 
    (2)建议使用INT UNSIGNED存储IPV4. 
    (3)用DECIMAL代替FLOAT和DOUBLE存储精确浮点数. 例如与货币、金融相关的数据. 
    (4)INT类型固定占用4字节存储,例如INT(4)仅代表显示字符宽度为4位,不代表存储长度. 
    (5)区分使用TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT数据类型. 
        例如取值范围为0-80时,使用TINYINT UNSIGNED. 
    (6)强烈建议使用TINYINT来代替ENUM类型. 
    (7)尽可能不使用TEXT、BLOB类型. 
    (8)禁止在数据库中存储明文密码. 
    (9)使用VARBINARY存储大小写敏感的变长字符串或二进制内容. 
    (10)使用尽可能小的VARCHAR字段. VARCHAR(N)中的N表示字符数而非字节数. 
    (11)区分使用DATETIME和TIMESTAMP. 
        存储年使用YEAR类型. 存储日期使用DATE类型.  存储时间(精确到秒)建议使用TIMESTAMP类型. 
    (12)所有字段均定义为NOT NULL. 

5.索引规范
    (1)单张表中索引数量不超过5个. 
    (2)单个索引中的字段数不超过5个. 
    (3)索引名必须全部使用小写. 
    (4)非唯一索引按照“idx_字段名称[_字段名称]”进用行命名. 例如idx_age_name. 
    (5)唯一索引按照“uniq_字段名称[_字段名称]”进用行命名. 例如uniq_age_name. 
    (6)组合索引建议包含所有字段名,过长的字段名可以采用缩写形式. 例如idx_age_name_add. 
    (7)表必须有主键,推荐使用UNSIGNED自增列作为主键. 
    (8)唯一键由3个以下字段组成,并且字段都是整形时,可使用唯一键作为主键. 其他情况下,建议使用自增列或发号器作主键. 
    (9)禁止冗余索引. 
    (10)禁止重复索引. 
    (11)禁止使用外键. 
    (12)联表查询时,JOIN列的数据类型必须相同,并且要建立索引. 
    (13)不在低基数列上建立索引,例如“性别”. 
    (14)选择区分度大的列建立索引. 组合索引中,区分度大的字段放在最前. 
    (15)对字符串使用前缀索引,前缀索引长度不超过8个字符. 
    (16)不对过长的VARCHAR字段建立索引. 建议优先考虑前缀索引,或添加CRC32或MD5伪列并建立索引. 
    (17)合理创建联合索引,(a,b,c) 相当于 (a) 、(a,b) 、(a,b,c). 
    (18)合理使用覆盖索引减少IO,避免排序. 