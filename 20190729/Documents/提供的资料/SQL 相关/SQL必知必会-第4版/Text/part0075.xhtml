<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h2 class="calibre15" id="nav_point_108">14.2  创建组合查询</h2><p class="calibre2">可用<code class="calibre11">UNION</code>操作符来组合数条SQL查询。利用<code class="calibre11">UNION</code>，可给出多条<code class="calibre11">SELECT</code>语句，将它们的结果组合成一个结果集。 </p>
<h3 class="calibre7" id="nav_point_109">14.2.1  使用UNION</h3><p class="calibre2">使用<code class="calibre11">UNION</code>很简单，所要做的只是给出每条<code class="calibre11">SELECT</code>语句，在各条语句之间放上关键字<code class="calibre11">UNION</code>。</p>

<p class="calibre2">举个例子，假如需要Illinois、Indiana和Michigan等美国几个州的所有顾客的报表，还想包括不管位于哪个州的所有的<code class="calibre11">Fun4All</code>。当然可以利用<code class="calibre11">WHERE</code>子句来完成此工作，不过这次我们使用<code class="calibre11">UNION</code>。</p>

<p class="calibre2">如上所述，创建<code class="calibre11">UNION</code>涉及编写多条<code class="calibre11">SELECT</code>语句。首先来看单条语句：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_state IN ('IL','IN','MI');
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">cust_name       cust_contact      cust_email
-----------     -------------     ------------
Village Toys    John Smith        sales@villagetoys.com
Fun4All         Jim Jones         jjones@fun4all.com
The Toy Store   Kim Howard        NULL 
</code></pre>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_name = 'Fun4All';
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">cust_name       cust_contact         cust_email
-----------     -------------        ------------
Fun4All         Jim Jones            jjones@fun4all.com
Fun4All         Denise L. Stephens   dstephens@fun4all.com 
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
第一条<code class="calibre11">SELECT</code>把Illinois、Indiana、Michigan等州的缩写传递给<code class="calibre11">IN</code>子句，检索出这些州的所有行。第二条<code class="calibre11">SELECT</code>利用简单的相等测试找出所有<code class="calibre11">Fun4All</code>。</p>

<p class="calibre2">组合这两条语句，可以如下进行：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_state IN ('IL','IN','MI')
UNION
SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_name = 'Fun4All';
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">cust_name       cust_contact        cust_email
-----------     -----------         ----------------
Fun4All         Denise L. Stephens  dstephens@fun4all.com
Fun4All         Jim Jones           jjones@fun4all.com
Village Toys    John Smith          sales@villagetoys.com
The Toy Store   Kim Howard          NULL
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
这条语句由前面的两条<code class="calibre11">SELECT</code>语句组成，之间用<code class="calibre11">UNION</code>关键字分隔。<code class="calibre11">UNION</code>指示DBMS执行这两条<code class="calibre11">SELECT</code>语句，并把输出组合成一个查询结果集。</p>

<p class="calibre2">为了便于参考，这里给出使用多条<code class="calibre11">WHERE</code>子句而不是<code class="calibre11">UNION</code>的相同查询：  </p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_state IN ('IL','IN','MI')
 OR cust_name = 'Fun4All';
</code></pre>

<p class="calibre2">在这个简单的例子中，使用<code class="calibre11">UNION</code>可能比使用<code class="calibre11">WHERE</code>子句更为复杂。但对于较复杂的过滤条件，或者从多个表（而不是一个表）中检索数据的情形，使用<code class="calibre11">UNION</code>可能会使处理更简单。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：<code class="calibre11">UNION</code>的限制</strong><br class="calibre14"/>
  使用<code class="calibre11">UNION</code>组合<code class="calibre11">SELECT</code>语句的数目，SQL没有标准限制。但是，最好是参考一下具体的DBMS文档，了解它是否对<code class="calibre11">UNION</code>能组合的最大语句数目有限制。</p>
</blockquote>

<p class="calibre2"></p><p class="calibre2"></p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">警告：性能问题</strong><br class="calibre14"/>
  多数好的DBMS使用内部查询优化程序，在处理各条<code class="calibre11">SELECT</code>语句前组合它们。理论上讲，这意味着从性能上看使用多条<code class="calibre11">WHERE</code>子句条件还是<code class="calibre11">UNION</code>应该没有实际的差别。不过我说的是理论上，实践中多数查询优化程序并不能达到理想状态，所以最好测试一下这两种方法，看哪种工作得更好。</p>
</blockquote>
<h3 class="calibre7" id="nav_point_110">14.2.2  UNION规则</h3><p class="calibre2">可以看到，<code class="calibre11">UNION</code>非常容易使用，但在进行组合时需要注意几条规则。</p>

<ul class="calibre8">
<li class="calibre9"><code class="calibre11">UNION</code>必须由两条或两条以上的<code class="calibre11">SELECT</code>语句组成，语句之间用关键字<code class="calibre11">UNION</code>分隔（因此，如果组合四条<code class="calibre11">SELECT</code>语句，将要使用三个<code class="calibre11">UNION</code>关键字）。</li>
<li class="calibre9"><code class="calibre11">UNION</code>中的每个查询必须包含相同的列、表达式或聚集函数（不过，各个列不需要以相同的次序列出）。</li>
<li class="calibre9">列数据类型必须兼容：类型不必完全相同，但必须是DBMS可以隐含转换的类型（例如，不同的数值类型或不同的日期类型）。</li>
</ul>

<p class="calibre2">如果遵守了这些基本规则或限制，则可以将<code class="calibre11">UNION</code>用于任何数据检索操作。</p>
<h3 class="calibre7" id="nav_point_111">14.2.3  包含或取消重复的行</h3><p class="calibre2">回到14.2.1节，我们看看所用的<code class="calibre11">SELECT</code>语句。注意到在分别执行语句时，第一条<code class="calibre11">SELECT</code>语句返回3行，第二条<code class="calibre11">SELECT</code>语句返回2行。而在用<code class="calibre11">UNION</code>组合两条<code class="calibre11">SELECT</code>语句后，只返回4行而不是5行。</p>

<p class="calibre2"><code class="calibre11">UNION</code>从查询结果集中自动去除了重复的行；换句话说，它的行为与一条<code class="calibre11">SELECT</code>语句中使用多个<code class="calibre11">WHERE</code>子句条件一样。因为Indiana州有一个Fun4All单位，所以两条<code class="calibre11">SELECT</code>语句都返回该行。使用<code class="calibre11">UNION</code>时，重复的行会被自动取消。</p>

<p class="calibre2">这是<code class="calibre11">UNION</code>的默认行为，如果愿意也可以改变它。事实上，如果想返回所有的匹配行，可使用<code class="calibre11">UNION ALL</code>而不是<code class="calibre11">UNION</code>。</p>

<p class="calibre2">请看下面的例子：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email 
FROM Customers 
WHERE cust_state IN ('IL','IN','MI') 
UNION ALL
SELECT cust_name, cust_contact, cust_email 
FROM Customers 
WHERE cust_name = 'Fun4All';
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">cust_name       cust_contact         cust_email
-----------     -------------        ------------
Village Toys    John Smith           sales@villagetoys.com
Fun4All         Jim Jones            jjones@fun4all.com
The Toy Store   Kim Howard           NULL
Fun4All         Jim Jones            jjones@fun4all.com
Fun4All         Denise L. Stephens   dstephens@fun4all.com
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
使用<code class="calibre11">UNION ALL</code>，DBMS不取消重复的行。因此，这里返回5行，其中有一行出现两次。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：<code class="calibre11">UNION</code>与<code class="calibre11">WHERE</code></strong><br class="calibre14"/>
  这一课一开始我们说过，<code class="calibre11">UNION</code>几乎总是完成与多个<code class="calibre11">WHERE</code>条件相同的工作。<code class="calibre11">UNION ALL</code>为<code class="calibre11">UNION</code>的一种形式，它完成<code class="calibre11">WHERE</code>子句完成不了的工作。如果确实需要每个条件的匹配行全部出现（包括重复行），就必须使用<code class="calibre11">UNION ALL</code>，而不是<code class="calibre11">WHERE</code>。</p>
</blockquote>
<h3 class="calibre7" id="nav_point_112">14.2.4  对组合查询结果排序</h3><p class="calibre2"><code class="calibre11">SELECT</code>语句的输出用<code class="calibre11">ORDER BY</code>子句排序。在用<code class="calibre11">UNION</code>组合查询时，只能使用一条<code class="calibre11">ORDER BY</code>子句，它必须位于最后一条<code class="calibre11">SELECT</code>语句之后。对于结果集，不存在用一种方式排序一部分，而又用另一种方式排序另一部分的情况，因此不允许使用多条<code class="calibre11">ORDER BY</code>子句。</p>

<p class="calibre2">下面的例子对前面<code class="calibre11">UNION</code>返回的结果进行排序：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_state IN ('IL','IN','MI')
UNION
SELECT cust_name, cust_contact, cust_email
FROM Customers
WHERE cust_name = 'Fun4All'
ORDER BY cust_name, cust_contact; 
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">cust_name       cust_contact         cust_email
-----------     -------------        -------------
Fun4All         Denise L. Stephens   dstephens@fun4all.com
Fun4All         Jim Jones            jjones@fun4all.com
The Toy Store   Kim Howard           NULL
Village Toys    John Smith           sales@villagetoys.com 
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
这条<code class="calibre11">UNION</code>在最后一条<code class="calibre11">SELECT</code>语句后使用了<code class="calibre11">ORDER BY</code>子句。虽然<code class="calibre11">ORDER BY</code>子句似乎只是最后一条<code class="calibre11">SELECT</code>语句的组成部分，但实际上DBMS将用它来排序所有<code class="calibre11">SELECT</code>语句返回的所有结果。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：其他类型的<code class="calibre11">UNION</code></strong><br class="calibre14"/>
  某些DBMS还支持另外两种<code class="calibre11">UNION</code>：<code class="calibre11">EXCEPT</code>（有时称为<code class="calibre11">MINUS</code>）可用来检索只在第一个表中存在而在第二个表中不存在的行；而<code class="calibre11">INTERSECT</code>可用来检索两个表中都存在的行。实际上，这些<code class="calibre11">UNION</code>很少使用，因为相同的结果可利用联结得到。</p>
</blockquote>

<p class="calibre2"></p><p class="calibre2"></p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：操作多个表</strong><br class="calibre14"/>
  为了简单，本课中的例子都是使用<code class="calibre11">UNION</code>来组合针对同一表的多个查询。实际上，<code class="calibre11">UNION</code>在需要组合多个表的数据时也很有用，即使是有不匹配列名的表，在这种情况下，可以将UNION与别名组合，检索一个结果集。</p>
</blockquote>
</body>
</html>
