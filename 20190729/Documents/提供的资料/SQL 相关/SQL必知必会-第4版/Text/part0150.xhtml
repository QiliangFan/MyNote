<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h1 class="calibre1" id="nav_point_211">附录D SQL数据类型</h1><p class="calibre2">正如第1课所述，数据类型是定义列中可以存储什么数据以及该数据实际怎样存储的基本规则。</p>

<p class="calibre2">数据类型用于以下目的。</p>

<ul class="calibre8">
<li class="calibre9">数据类型允许限制可存储在列中的数据。例如，数值数据类型列只能接受数值。</li>
<li class="calibre9">数据类型允许在内部更有效地存储数据。可以用一种比文本字符串更简洁的格式存储数值和日期时间值。</li>
<li class="calibre9">数据类型允许变换排序顺序。如果所有数据都作为字符串处理，则1位于10之前，而10又位于2之前（字符串以字典顺序排序，从左边开始比较，一次一个字符）。作为数值数据类型，数值才能正确排序。</li>
</ul>

<p class="calibre2">在设计表时，应该特别重视所用的数据类型。使用错误的数据类型可能会严重影响应用程序的功能和性能。更改包含数据的列不是一件小事（而且这样做可能会导致数据丢失）。</p>

<p class="calibre2">本附录虽然不是关于数据类型及其如何使用的完整教材，但介绍了主要的数据类型、用途、兼容性等问题。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">警告：任意两个DBMS都不是完全相同的</strong><br class="calibre14"/>
  以前曾经说过，现在还需要再次提醒。不同DBMS的数据类型可能有很大的不同。在不同DBMS中，即使具有相同名称的数据类型也可能代表不同的东西。关于具体的DBMS支持何种数据类型以及如何支持的详细信息，请参阅具体的DBMS文档。</p>
</blockquote>
</body>
</html>
