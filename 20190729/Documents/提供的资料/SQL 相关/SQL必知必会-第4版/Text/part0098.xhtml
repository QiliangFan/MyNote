<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h2 class="calibre15" id="nav_point_147">19.2  为什么要使用存储过程</h2><p class="calibre2">我们知道了什么是存储过程，那么为什么要使用它们呢？理由很多，下面列出一些主要的。</p>

<ul class="calibre8">
<li class="calibre9">通过把处理封装在一个易用的单元中，可以简化复杂的操作（如前面例子所述）。</li>
<li class="calibre9"><p class="calibre2">由于不要求反复建立一系列处理步骤，因而保证了数据的一致性。如果所有开发人员和应用程序都使用同一存储过程，则所使用的代码都是相同的。<br class="calibre14"/>
这一点的延伸就是防止错误。需要执行的步骤越多，出错的可能性就越大。防止错误保证了数据的一致性。</p></li>
<li class="calibre9"><p class="calibre2">简化对变动的管理。如果表名、列名或业务逻辑（或别的内容）有变化，那么只需要更改存储过程的代码。使用它的人员甚至不需要知道这些变化。<br class="calibre14"/>
这一点的延伸就是安全性。通过存储过程限制对基础数据的访问，减少了数据讹误（无意识的或别的原因所导致的数据讹误）的机会。</p></li>
<li class="calibre9"><p class="calibre2">因为存储过程通常以编译过的形式存储，所以DBMS处理命令的工作较少，提高了性能。</p></li>
<li class="calibre9"><p class="calibre2">存在一些只能用在单个请求中的SQL元素和特性，存储过程可以使用它们来编写功能更强更灵活的代码。  </p></li>
</ul>

<p class="calibre2">换句话说，使用存储过程有三个主要的好处，即简单、安全、高性能。显然，它们都很重要。不过，在将SQL代码转换为存储过程前，也必须知道它的一些缺陷。</p>

<ul class="calibre8">
<li class="calibre9"><p class="calibre2">不同DBMS中的存储过程语法有所不同。事实上，编写真正的可移植存储过程几乎是不可能的。不过，存储过程的自我调用（名字以及数据如何传递）可以相对保持可移植。因此，如果需要移植到别的DBMS，至少客户端应用代码不需要变动。</p></li>
<li class="calibre9"><p class="calibre2">一般来说，编写存储过程比编写基本SQL语句复杂，需要更高的技能，更丰富的经验。因此，许多数据库管理员把限制存储过程的创建作为安全措施（主要受上一条缺陷的影响）。</p></li>
</ul>

<p class="calibre2">尽管有这些缺陷，存储过程还是非常有用的，并且应该使用。事实上，多数DBMS都带有用于管理数据库和表的各种存储过程。更多信息请参阅具体的DBMS文档。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：不能编写存储过程？你依然可以使用</strong><br class="calibre14"/>
  大多数DBMS将编写存储过程所需的安全和访问权限与执行存储过程所需的安全和访问权限区分开来。这是好事情，即使你不能（或不想）编写自己的存储过程，也仍然可以在适当的时候执行别的存储过程。</p>
</blockquote>
</body>
</html>
