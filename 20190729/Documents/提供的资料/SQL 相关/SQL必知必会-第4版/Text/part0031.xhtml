<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h2 class="calibre15" id="nav_point_43">5.3  NOT操作符</h2><p class="calibre2"><code class="calibre11">WHERE</code>子句中的<code class="calibre11">NOT</code>操作符有且只有一个功能，那就是否定其后所跟的任何条件。因为<code class="calibre11">NOT</code>从不单独使用（它总是与其他操作符一起使用），所以它的语法与其他操作符有所不同。<code class="calibre11">NOT</code>关键字可以用在要过滤的列前，而不仅是在其后。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3"><code class="calibre11">NOT</code></strong><br class="calibre14"/>
  <code class="calibre11">WHERE</code>子句中用来否定其后条件的关键字。</p>
</blockquote>

<p class="calibre2">下面的例子说明<code class="calibre11">NOT</code>的用法。为了列出除<code class="calibre11">DLL01</code>之外的所有供应商制造的产品，可编写如下的代码：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT prod_name
FROM Products
WHERE NOT vend_id = 'DLL01'
ORDER BY prod_name;
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">prod_name
------------------
12 inch teddy bear
18 inch teddy bear
8 inch teddy bear
King doll
Queen doll
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
这里的<code class="calibre11">NOT</code>否定跟在其后的条件，因此，DBMS不是匹配<code class="calibre11">vend_id</code>为<code class="calibre11">DLL01</code>，而是匹配非<code class="calibre11">DLL01</code>之外的所有东西。</p>

<p class="calibre2">上面的例子也可以使用<code class="calibre11">&lt;&gt;</code>操作符来完成，如下所示：   </p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT prod_name
FROM Products
WHERE vend_id &lt;&gt; 'DLL01'
ORDER BY prod_name; 
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">prod_name
------------------
12 inch teddy bear
18 inch teddy bear
8 inch teddy bear
King doll
Queen doll 
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
为什么使用<code class="calibre11">NOT</code>？对于这里的这种简单的<code class="calibre11">WHERE</code>子句，使用<code class="calibre11">NOT</code>确实没有什么优势。但在更复杂的子句中，<code class="calibre11">NOT</code>是非常有用的。例如，在与<code class="calibre11">IN</code>操作符联合使用时，<code class="calibre11">NOT</code>可以非常简单地找出与条件列表不匹配的行。  </p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：MariaDB中的<code class="calibre11">NOT</code></strong><br class="calibre14"/>
  MariaDB支持使用<code class="calibre11">NOT</code>否定<code class="calibre11">IN</code>、<code class="calibre11">BETWEEN</code>和<code class="calibre11">EXISTS</code>子句。大多数DBMS允许使用<code class="calibre11">NOT</code>否定任何条件。</p>
</blockquote>
</body>
</html>
