<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h2 class="calibre15" id="nav_point_122">16.1  更新数据</h2><p class="calibre2">更新（修改）表中的数据，可以使用<code class="calibre11">UPDATE</code>语句。有两种使用<code class="calibre11">UPDATE</code>的方式：</p>

<ul class="calibre8">
<li class="calibre9">更新表中的特定行；</li>
<li class="calibre9">更新表中的所有行。</li>
</ul>

<p class="calibre2">下面分别介绍。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">警告：不要省略<code class="calibre11">WHERE</code>子句</strong><br class="calibre14"/>
  在使用<code class="calibre11">UPDATE</code>时一定要细心。因为稍不注意，就会更新表中的所有行。使用这条语句前，请完整地阅读本节。</p>
</blockquote>

<p class="calibre2"></p><p class="calibre2"></p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：<code class="calibre11">UPDATE</code>与安全</strong><br class="calibre14"/>
  在客户端/服务器的DBMS中，使用<code class="calibre11">UPDATE</code>语句可能需要特殊的安全权限。在你使用<code class="calibre11">UPDATE</code>前，应该保证自己有足够的安全权限。</p>
</blockquote>

<p class="calibre2">使用<code class="calibre11">UPDATE</code>语句非常容易，甚至可以说太容易了。基本的<code class="calibre11">UPDATE</code>语句由三部分组成，分别是：</p>

<ul class="calibre8">
<li class="calibre9">要更新的表；</li>
<li class="calibre9">列名和它们的新值；</li>
<li class="calibre9">确定要更新哪些行的过滤条件。</li>
</ul>

<p class="calibre2">举一个简单例子。客户<code class="calibre11">1000000005</code>现在有了电子邮件地址，因此他的记录需要更新，语句如下：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">UPDATE Customers
SET cust_email = 'kim@thetoystore.com'
WHERE cust_id = '1000000005';
</code></pre>

<p class="calibre2"><code class="calibre11">UPDATE</code>语句总是以要更新的表名开始。在这个例子中，要更新的表名为<code class="calibre11">Customers</code>。<code class="calibre11">SET</code>命令用来将新值赋给被更新的列。在这里，<code class="calibre11">SET</code>子句设置<code class="calibre11">cust_email</code>列为指定的值：</p>

<pre class="calibre10"><code class="calibre11">SET cust_email = 'kim@thetoystore.com'
</code></pre>

<p class="calibre2"><code class="calibre11">UPDATE</code>语句以<code class="calibre11">WHERE</code>子句结束，它告诉DBMS更新哪一行。没有<code class="calibre11">WHERE</code>子句，DBMS将会用这个电子邮件地址更新<code class="calibre11">Customers</code>表中的所有行，这不是我们希望的。</p>

<p class="calibre2">更新多个列的语法稍有不同：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">UPDATE Customers
SET cust_contact = 'Sam Roberts',
    cust_email = 'sam@toyland.com'
WHERE cust_id = '1000000006';
</code></pre>

<p class="calibre2">在更新多个列时，只需要使用一条<code class="calibre11">SET</code>命令，每个“列=值”对之间用逗号分隔（最后一列之后不用逗号）。在此例子中，更新顾客<code class="calibre11">1000000006</code>的<code class="calibre11">cust_contact</code>和<code class="calibre11">cust_email</code>列。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：在<code class="calibre11">UPDATE</code>语句中使用子查询</strong><br class="calibre14"/>
  <code class="calibre11">UPDATE</code>语句中可以使用子查询，使得能用<code class="calibre11">SELECT</code>语句检索出的数据更新列数据。关于子查询及使用的更多内容，请参阅第11课。</p>
</blockquote>

<p class="calibre2"></p><p class="calibre2"></p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">提示：<code class="calibre11">FROM</code>关键字</strong><br class="calibre14"/>
  有的SQL实现支持在<code class="calibre11">UPDATE</code>语句中使用<code class="calibre11">FROM</code>子句，用一个表的数据更新另一个表的行。如想知道你的DBMS是否支持这个特性，请参阅它的文档。</p>
</blockquote>

<p class="calibre2">要删除某个列的值，可设置它为<code class="calibre11">NULL</code>（假如表定义允许<code class="calibre11">NULL</code>值）。如下进行：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">UPDATE Customers
SET cust_email = NULL
WHERE cust_id = '1000000005';
</code></pre>

<p class="calibre2">其中<code class="calibre11">NULL</code>用来去除<code class="calibre11">cust_email</code>列中的值。这与保存空字符串很不同（空字符串用<code class="calibre11">''</code>表示，是一个值），而<code class="calibre11">NULL</code>表示没有值。</p>
</body>
</html>
