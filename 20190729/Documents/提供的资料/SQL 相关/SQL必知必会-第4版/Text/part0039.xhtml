<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>未知</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../Styles/style0002.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/style0001.css" rel="stylesheet" type="text/css"/>
</head>
  <body class="calibre">
<h2 class="calibre15" id="nav_point_54">7.2  拼接字段</h2><p class="calibre2">为了说明如何使用计算字段，我们来举一个简单例子，创建由两列组成的标题。</p>

<p class="calibre2"><code class="calibre11">Vendors</code>表包含供应商名和地址信息。假如要生成一个供应商报表，需要在格式化的名称（位置）中列出供应商的位置。</p>

<p class="calibre2">此报表需要一个值，而表中数据存储在两个列<code class="calibre11">vend_name</code>和<code class="calibre11">vend_country</code>中。此外，需要用括号将<code class="calibre11">vend_country</code>括起来，这些东西都没有存储在数据库表中。这个返回供应商名称和地址的<code class="calibre11">SELECT</code>语句很简单，但我们是如何创建这个组合值的呢？</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">拼接（concatenate）</strong><br class="calibre14"/>
  将值联结到一起（将一个值附加到另一个值）构成单个值。</p>
</blockquote>

<p class="calibre2">解决办法是把两个列拼接起来。在SQL中的<code class="calibre11">SELECT</code>语句中，可使用一个特殊的操作符来拼接两个列。根据你所使用的DBMS，此操作符可用加号（<code class="calibre11">+</code>）或两个竖杠（<code class="calibre11">||</code>）表示。在MySQL和MariaDB中，必须使用特殊的函数。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：是<code class="calibre11">+</code>还是<code class="calibre11">||</code>？</strong><br class="calibre14"/>
  Access和SQL Server使用<code class="calibre11">+</code>号。DB2、Oracle、PostgreSQL、SQLite和Open Office Base使用<code class="calibre11">||</code>。详细请参阅具体的DBMS文档。</p>
</blockquote>

<p class="calibre2">下面是使用加号的例子（多数DBMS使用这种语法）：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT vend_name + ' (' + vend_country + ')'
FROM Vendors
ORDER BY vend_name;
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">-----------------------------------------------------------
Bear Emporium                                (USA        )
Bears R Us                                   (USA        )
Doll House Inc.                              (USA        )
Fun and Games                                (England    )
Furball Inc.                                 (USA        )
Jouets et ours                               (France     )
</code></pre>

<p class="calibre2">下面是相同的语句，但使用的是<code class="calibre11">||</code>语法：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT vend_name || ' (' || vend_country || ')'
FROM Vendors
ORDER BY vend_name; 
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">-----------------------------------------------------------
Bear Emporium                                (USA        )
Bears R Us                                   (USA        )
Doll House Inc.                              (USA        )
Fun and Games                                (England    )
Furball Inc.                                 (USA        )
Jouets et ours                               (France     )
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
上面两个<code class="calibre11">SELECT</code>语句拼接以下元素：</p>

<ul class="calibre8">
<li class="calibre9">存储在<code class="calibre11">vend_name</code>列中的名字；</li>
<li class="calibre9">包含一个空格和一个左圆括号的字符串；</li>
<li class="calibre9">存储在<code class="calibre11">vend_country</code>列中的国家；</li>
<li class="calibre9">包含一个右圆括号的字符串。</li>
</ul>

<p class="calibre2">从上述输出中可以看到，<code class="calibre11">SELECT</code>语句返回包含上述四个元素的一个列（计算字段）。</p>

<p class="calibre2">再看看上述<code class="calibre11">SELECT</code>语句返回的输出。结合成一个计算字段的两个列用空格填充。许多数据库（不是所有）保存填充为列宽的文本值，而实际上你要的结果不需要这些空格。为正确返回格式化的数据，必须去掉这些空格。这可以使用SQL的<code class="calibre11">RTRIM()</code>函数来完成，如下所示：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT RTRIM(vend_name) + ' (' + RTRIM(vend_country) + ')'
FROM Vendors
ORDER BY vend_name;
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">-----------------------------------------------------------
Bear Emporium (USA)
Bears R Us (USA)
Doll House Inc. (USA)
Fun and Games (England)
Furball Inc. (USA)
Jouets et ours (France)
</code></pre>

<p class="calibre2">下面是相同的语句，但使用的是<code class="calibre11">||</code>：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT RTRIM(vend_name) || ' (' || RTRIM(vend_country) || ')'
FROM Vendors
ORDER BY vend_name; 
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">-----------------------------------------------------------
Bear Emporium (USA)
Bears R Us (USA)
Doll House Inc. (USA)
Fun and Games (England)
Furball Inc. (USA)
Jouets et ours (France)
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
<code class="calibre11">RTRIM()</code>函数去掉值右边的所有空格。通过使用<code class="calibre11">RTRIM()</code>，各个列都进行了整理。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：TRIM函数</strong><br class="calibre14"/>
  大多数DBMS都支持<code class="calibre11">RTRIM()</code>（正如刚才所见，它去掉字符串右边的空格）、<code class="calibre11">LTRIM()</code>（去掉字符串左边的空格）以及<code class="calibre11">TRIM()</code>（去掉字符串左右两边的空格）。</p>
</blockquote>
<h3 class="calibre7" id="nav_point_55">使用别名</h3><p class="calibre2">从前面的输出可以看到，<code class="calibre11">SELECT</code>语句可以很好地拼接地址字段。但是，这个新计算列的名字是什么呢？实际上它没有名字，它只是一个值。如果仅在SQL查询工具中查看一下结果，这样没有什么不好。但是，一个未命名的列不能用于客户端应用中，因为客户端没有办法引用它。</p>

<p class="calibre2">为了解决这个问题，SQL支持列别名。别名（alias）是一个字段或值的替换名。别名用<code class="calibre11">AS</code>关键字赋予。请看下面的<code class="calibre11">SELECT</code>语句：</p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT RTRIM(vend_name) + ' (' + RTRIM(vend_country) + ')' 
       AS vend_title
FROM Vendors
ORDER BY vend_name;
</code></pre>

<p class="calibre2"><strong class="calibre3">输出▼</strong></p>

<pre class="calibre10"><code class="calibre11">vend_title
-----------------------------------------------------------
Bear Emporium (USA)
Bears R Us (USA)
Doll House Inc. (USA)
Fun and Games (England)
Furball Inc. (USA)
Jouets et ours (France)
</code></pre>

<p class="calibre2">下面是相同的语句，但使用的是<code class="calibre11">||</code>语法： </p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT RTRIM(vend_name) || ' (' || RTRIM(vend_country) || ')'
       AS vend_title
FROM Vendors
ORDER BY vend_name; 
</code></pre>

<p class="calibre2">下面是MySQL和MariaDB中使用的语句： </p>

<p class="calibre2"><strong class="calibre3">输入▼</strong></p>

<pre class="calibre10"><code class="calibre11">SELECT Concat(vend_name, ' (', vend_country, ')')
       AS vend_title
FROM Vendors
ORDER BY vend_name;
</code></pre>

<p class="calibre2"><strong class="calibre3">分析▼</strong><br class="calibre14"/>
<code class="calibre11">SELECT</code>语句本身与以前使用的相同，只不过这里的计算字段之后跟了文本<code class="calibre11">AS vend_title</code>。它指示SQL创建一个包含指定计算结果的名为<code class="calibre11">vend_title</code>的计算字段。从输出可以看到，结果与以前的相同，但现在列名为<code class="calibre11">vend_title</code>，任何客户端应用都可以按名称引用这个列，就像它是一个实际的表列一样。</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：AS通常可选</strong><br class="calibre14"/>
  在很多DBMS中，AS关键字是可选的，不过最好使用它，这被视为一条最佳实践。</p>
  
  <p class="calibre2"><strong class="calibre3">提示：别名的其他用途</strong><br class="calibre14"/>
  别名还有其他用途。常见的用途包括在实际的表列名包含不合法的字符（如空格）时重新命名它，在原来的名字含混或容易误解时扩充它。</p>
</blockquote>

<p class="calibre2">　</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">警告：别名</strong><br class="calibre14"/>
  别名既可以是一个单词也可以是一个字符串。如果是后者，字符串应该括在引号中。虽然这种做法是合法的，但不建议这么去做。多单词的名字可读性高，不过会给客户端应用带来各种问题。因此，别名最常见的使用是将多个单词的列名重命名为一个单词的名字。</p>
</blockquote>

<p class="calibre2">　　</p>

<blockquote class="calibre13">
  <p class="calibre2"><strong class="calibre3">说明：导出列</strong><br class="calibre14"/>
  别名有时也称为导出列（derived column），不管怎么叫，它们所代表的是相同的东西。</p>
</blockquote>
</body>
</html>
